import streamlit as st
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config_production import aplicar_configuracoes_producao
from dashboard import exportar_grafico_para_pdf
import plotly.graph_objects as go
from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch
import io
from datetime import datetime

st.set_page_config(
    page_title="Teste de Deploy - Gr√°ficos PDF",
    page_icon="üöÄ",
    layout="wide"
)

st.title("üöÄ Teste de Deploy - Gr√°ficos em PDF")
st.markdown("---")

if st.button("üß™ Executar Teste Completo", type="primary"):
    with st.spinner("Executando testes..."):
        try:
            st.subheader("1Ô∏è‚É£ Configura√ß√µes de Produ√ß√£o")
            aplicar_configuracoes_producao()
            st.success("‚úÖ Configura√ß√µes aplicadas")
            
            st.subheader("2Ô∏è‚É£ Cria√ß√£o do Gr√°fico")
            fig = go.Figure()
            fig.add_trace(go.Scatter(
                x=[1, 2, 3, 4, 5],
                y=[10, 11, 12, 13, 14],
                mode='lines+markers',
                name='Teste Deploy',
                line=dict(color='#1f77b4', width=3),
                marker=dict(size=8)
            ))
            
            fig.update_layout(
                title="Gr√°fico de Teste - Deploy Streamlit Cloud",
                xaxis_title="Per√≠odo",
                yaxis_title="Valores",
                template="plotly_white",
                showlegend=True
            )
            
            st.plotly_chart(fig, use_container_width=True)
            st.success("‚úÖ Gr√°fico criado")
            
            st.subheader("3Ô∏è‚É£ Convers√£o Ultra-Robusta")
            resultado_img = exportar_grafico_para_pdf(fig, "Teste Deploy Streamlit Cloud")
            
            if resultado_img:
                st.success(f"‚úÖ Convers√£o bem-sucedida: {type(resultado_img)}")
                
                st.subheader("4Ô∏è‚É£ Gera√ß√£o do PDF")
                buffer = io.BytesIO()
                doc = SimpleDocTemplate(buffer, pagesize=A4)
                styles = getSampleStyleSheet()
                story = []
                
                story.append(Paragraph("Teste de Deploy - Streamlit Cloud", styles['Title']))
                story.append(Spacer(1, 0.2*inch))
                story.append(Paragraph(f"Data/Hora: {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}", styles['Normal']))
                story.append(Spacer(1, 0.3*inch))
                story.append(Paragraph("Gr√°fico de Teste:", styles['Heading2']))
                story.append(Spacer(1, 0.1*inch))
                story.append(resultado_img)
                story.append(Spacer(1, 0.2*inch))
                story.append(Paragraph("‚úÖ Se voc√™ consegue ver o gr√°fico acima, a solu√ß√£o ultra-robusta funcionou!", styles['Normal']))
                
                doc.build(story)
                pdf_bytes = buffer.getvalue()
                buffer.close()
                
                st.success(f"‚úÖ PDF gerado com sucesso: {len(pdf_bytes)} bytes")
                
                st.download_button(
                    label="üì• Baixar PDF de Teste",
                    data=pdf_bytes,
                    file_name=f"teste_deploy_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
                    mime="application/pdf"
                )
                
                st.balloons()
                st.success("üéâ TESTE CONCLU√çDO COM SUCESSO!")
                
            else:
                st.error("‚ùå Falha na convers√£o do gr√°fico")
                
        except Exception as e:
            st.error(f"‚ùå Erro durante o teste: {str(e)}")
            st.code(str(e))

st.markdown("---")
st.markdown("""
### üìã Instru√ß√µes para Teste no Streamlit Cloud:

1. **Deploy este arquivo** junto com sua aplica√ß√£o
2. **Acesse a URL** do Streamlit Cloud
3. **Execute o teste** clicando no bot√£o acima
4. **Verifique se o PDF** cont√©m o gr√°fico
5. **Compare com o comportamento local**

### üîç O que este teste verifica:
- ‚úÖ Configura√ß√µes de produ√ß√£o aplicadas
- ‚úÖ Cria√ß√£o de gr√°ficos Plotly
- ‚úÖ Convers√£o ultra-robusta para imagem
- ‚úÖ Gera√ß√£o de PDF com gr√°fico
- ‚úÖ Download do arquivo final

### üö® Se o teste falhar:
- Verifique os logs do Streamlit Cloud
- Confirme se todas as depend√™ncias est√£o instaladas
- Verifique se o arquivo `requirements.txt` est√° atualizado
""")